buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.sudoku'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.projectlombok:lombok')
	testCompile('io.rest-assured:rest-assured:3.0.3')
	testCompile('org.seleniumhq.selenium:selenium-api')
	testCompile('org.seleniumhq.selenium:selenium-support')
	testCompile('org.seleniumhq.selenium:selenium-chrome-driver')
	testCompile('org.seleniumhq.selenium:selenium-remote-driver')
	testCompile('io.github.bonigarcia:webdrivermanager:2.1.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

task moveFrontend(dependsOn: 'frontend:yarn_build') {
    doLast {
        ant.move(file: 'frontend/build', tofile: 'build/resources/main/public')
		// debug
		def files =  fileTree("build/resources/main").filter { it.isFile() }.files.name
		files.each {
			println it
		}
    }
}

test.dependsOn('frontend:yarn_test', moveFrontend)
bootJar.dependsOn(moveFrontend)

// When testing frontend changes
// bootRun.dependsOn(build)